//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace souvenirshop.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SouvenirShopEntities5 : DbContext
    {
        public SouvenirShopEntities5()
            : base("name=SouvenirShopEntities5")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Sales> Sales { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual int deleteProduct(Nullable<int> pID)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteProduct", pIDParameter);
        }
    
        public virtual int deleteUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteUser", userIDParameter);
        }
    
        public virtual int InsertProduct(Nullable<int> averageCustomerRating, Nullable<int> price, string type, string imageURL, string productDescription, string color, string gender)
        {
            var averageCustomerRatingParameter = averageCustomerRating.HasValue ?
                new ObjectParameter("averageCustomerRating", averageCustomerRating) :
                new ObjectParameter("averageCustomerRating", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProduct", averageCustomerRatingParameter, priceParameter, typeParameter, imageURLParameter, productDescriptionParameter, colorParameter, genderParameter);
        }
    
        public virtual int InsertUser(string customerName, string customerSurname, string email_Address, Nullable<bool> isLogin, string password, Nullable<bool> isAdmin)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var customerSurnameParameter = customerSurname != null ?
                new ObjectParameter("customerSurname", customerSurname) :
                new ObjectParameter("customerSurname", typeof(string));
    
            var email_AddressParameter = email_Address != null ?
                new ObjectParameter("Email_Address", email_Address) :
                new ObjectParameter("Email_Address", typeof(string));
    
            var isLoginParameter = isLogin.HasValue ?
                new ObjectParameter("IsLogin", isLogin) :
                new ObjectParameter("IsLogin", typeof(bool));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("isAdmin", isAdmin) :
                new ObjectParameter("isAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUser", customerNameParameter, customerSurnameParameter, email_AddressParameter, isLoginParameter, passwordParameter, isAdminParameter);
        }
    
        public virtual int updateProduct(Nullable<int> pID, Nullable<int> averageCustomerRating, Nullable<int> price, string type, string imageURL, string productDescription, string color, string gender)
        {
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("pID", pID) :
                new ObjectParameter("pID", typeof(int));
    
            var averageCustomerRatingParameter = averageCustomerRating.HasValue ?
                new ObjectParameter("averageCustomerRating", averageCustomerRating) :
                new ObjectParameter("averageCustomerRating", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateProduct", pIDParameter, averageCustomerRatingParameter, priceParameter, typeParameter, imageURLParameter, productDescriptionParameter, colorParameter, genderParameter);
        }
    
        public virtual ObjectResult<ViewAllProducts_Result> ViewAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewAllProducts_Result>("ViewAllProducts");
        }
    }
}
